C51 COMPILER V9.60.0.0   CONTROL                                                           12/22/2019 16:36:18 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CONTROL
OBJECT MODULE PLACED IN ..\OBJ\Control.obj
COMPILER INVOKED BY: C:\software\IDE\Keil_v5\C51\BIN\C51.EXE Control.c LARGE ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE INCDI
                    -R(..\HARDWARE\ADC;..\HARDWARE\EEPROM;..\HARDWARE\MOTOR;..\SYSTEM\sys;..\SYSTEM\TIMER;..\SYSTEM\USART;..\SYSTEM\GPIO;..\S
                    -YSTEM\DELAY;..\USER) DEBUG OBJECTEXTEND PRINT(..\LST\Control.lst) TABS(2) OBJECT(..\OBJ\Control.obj)

line level    source

   1          #include "Control.h"
   2          
   3          
   4          unsigned char nmr=0;
   5          
   6          extern PID PID_Motor[4];
   7          
   8          void pid()
   9          {
  10   1          for(nmr=0;nmr<4;nmr++)
  11   1          {
  12   2            PID_Motor[nmr].angle = Get_ADC10bitResult(nmr); //参数0~7,查询方式做一次ADC, 返回值就是结果, == 1024 为
             -错误
  13   2            PID_Motor[nmr].error=PID_Motor[nmr].angle-PID_Motor[nmr].target;
  14   2                  //计算误差
  15   2            PID_Motor[nmr].pout =Pdat * PID_Motor[nmr].error;
  16   2                  //P
  17   2            PID_Motor[nmr].iout += Idat * PID_Motor[nmr].error;
  18   2            PID_Motor[nmr].iout = Get_MxMi(PID_Motor[nmr].iout,16,-16);//?D?áIê?・?3?3?・??§
  19   2                  //I
  20   2            PID_Motor[nmr].dout = Ddat*(PID_Motor[nmr].error-PID_Motor[nmr].Last_error);  
  21   2            PID_Motor[nmr].Last_error=PID_Motor[nmr].error; 
  22   2                  //D
  23   2            PID_Motor[nmr].OUT += PID_Motor[nmr].pout + PID_Motor[nmr].iout +PID_Motor[nmr].dout;////P,I,D融合
  24   2            PID_Motor[nmr].OUT=Get_MxMi(PID_Motor[nmr].OUT,256,-256);
  25   2          }
  26   1      }
  27          
  28          
  29          
  30            
  31              
  32          
  33          
  34          
  35          
  36          
  37          float Get_MxMi(float num,float max,float min)
  38          {
  39   1        if(num>max)
  40   1          return max;
  41   1        else if(num<min)
  42   1          return min;
  43   1        else
  44   1          return num;
  45   1      }
  46          
  47          
  48          
  49                


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.0.0   CONTROL                                                           12/22/2019 16:36:18 PAGE 2   

   CODE SIZE        =    681    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
